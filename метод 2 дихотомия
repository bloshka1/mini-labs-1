#include <iostream>
#include <cmath>
#include <iomanip>
#include <stdexcept>

// Пример функции: x^3 - 0.2*x^2 + 0.5*x - 1
double example_function(double x) {
    return x*x*x - 0.2*x*x + 0.5*x - 1.0;
}

// Метод дихотомии (бисекции)
double dichotomy_method(double (*f)(double), double a, double b, double epsilon) {
    if (f(a) * f(b) > 0) {
        throw std::invalid_argument("Функция не меняет знак на заданном интервале");
    }

    int iter = 0;
    double c;
    while ((b - a) / 2.0 > epsilon) {
        c = (a + b) / 2.0;
        iter++;

        if (f(c) == 0.0) {
            std::cout << "Количество итераций: " << iter << std::endl;
            return c;
        }
        else if (f(a) * f(c) < 0) {
            b = c;
        }
        else {
            a = c;
        }
    }
    std::cout << "Количество итераций: " << iter << std::endl;
    return (a + b) / 2.0;
}

int main() {
    double a = 0.0;           // левый край
    double b = 3.0;           // правый край
    double epsilon = 1e-10;   // точность

    try {
        double root = dichotomy_method(example_function, a, b, epsilon);
        std::cout << std::fixed << std::setprecision(12);
        std::cout << "Решение уравнения: x = " << root << std::endl;
        std::cout << "Значение функции: f(" << root << ") = " << example_function(root) << std::endl;
    }
    catch (const std::exception& e) {
        std::cerr << "Ошибка: " << e.what() << std::endl;
    }

    return 0;
}

